a) Os objetos passados para o método devem implementar as funções isNotEmpty e remove, que não recebem nenhum parâmetro.

b) É um conceito usado para linguagens fracamente tipadas que diz "If it looks like a duck, swims like a duck and quacks like a duck, then it probably is a duck".
A interpretação disso é que, ao invés de verificar se a classe de um objeto é alguma aceita (ou a propriamente especificada, ou por herança, ou por uma interface explícita), verifica-se se o objeto implementa os métodos e propriedades necessárias.
Ele pode ser muito relacionado também ao conceito de "Tell, don't ask", porque na semântica da linguagem ao invés de testar o tipo da classe, é requisitado o que queremos e o objeto deve agir sobre isso, ou nos retornar um erro ("nos falar").
Assim, o método removeAll passado não define qual o tipo de objeto s é, permitindo que tanto instâncias de Stack quanto de Queue sejam passadas. Porém, se for passado um objeto que não implementa esses métodos, um erro será retornado pelo próprio interpretador.